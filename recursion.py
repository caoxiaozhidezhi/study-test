# _*_ coding:utf-8 _*_

# ========================递归专题=========================
# 求N的阶乘、欧几里德算法(求最大公约数)、斐波那契数列(原始方法及生成器迭代器方法)、
# 汉诺塔问题、树的三种递归遍历方式、快速排序、折半查找、图的遍历、归并排序、
# 八皇后问题（回溯、递归）、棋盘覆盖（分治,递归）、Strassen矩阵乘法（分治）、
# 最近点对问题(分治+递归)、循环赛日程表、凸包问题求解

# ========================汉诺塔=========================


def move(n, a, b, c):
    if n == 1:
        print(a, "->", c)
    else:
        move(n - 1, a, c, b)
        move(1, a, b, c)
        move(n - 1, b, a, c)


move(3, "A", "B", "C")


# ========================求n的阶乘=========================
# 循环实现
num = 3
fact = 1
if num < 0:
    print("错误，负数没有阶乘")
elif num == 1:
    print("0的阶乘为1")
else:
    for i in range(1, num + 1):
        fact *= i
    print("%d的阶乘为%d" % (num, fact))


# 递归实现
def fact(n):
    if n < 0:
        print("错误，负数没有阶乘")
    elif n == 0:
        return 1
    else:
        return n * fact(n - 1)


print(fact(5))
